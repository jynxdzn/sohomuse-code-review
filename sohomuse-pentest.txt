================================================================================


 [+] Web Application Security Report - Arachni Framework

 [~] Report generated on: 2016-03-26 22:46:30 -0400
 [~] Report false positives at: http://github.com/Arachni/arachni/issues

 [+] System settings:
 [~] ---------------
 [~] Version:           1.4
 [~] Audit started on:  2016-03-26 22:28:49 -0400
 [~] Audit finished on: 2016-03-26 22:32:42 -0400
 [~] Runtime:           00:03:53

 [~] URL:        http://sohomuse.com/
 [~] User agent: Arachni/v1.4

 [*] Audited elements: 
 [~] * Links
 [~] * Forms
 [~] * Cookies
 [~] * XMLs
 [~] * JSONs
 [~] * UI inputs
 [~] * UI forms

 [*] Checks: code_injection, code_injection_php_input_wrapper, code_injection_timing, csrf, file_inclusion, ldap_injection, no_sql_injection, no_sql_injection_differential, os_cmd_injection, os_cmd_injection_timing, path_traversal, response_splitting, rfi, session_fixation, source_code_disclosure, sql_injection, sql_injection_differential, sql_injection_timing, trainer, unvalidated_redirect, unvalidated_redirect_dom, xpath_injection, xss, xss_dom, xss_dom_script_context, xss_event, xss_path, xss_script_context, xss_tag, xxe, allowed_methods, backdoors, backup_directories, backup_files, common_admin_interfaces, common_directories, common_files, directory_listing, captcha, cookie_set_for_parent_domain, credit_card, cvs_svn_users, emails, form_upload, hsts, html_objects, http_only_cookies, insecure_cookies, insecure_cors_policy, mixed_resource, password_autocomplete, private_ip, ssn, unencrypted_password_forms, x_frame_options, htaccess_limit, http_put, insecure_client_access_policy, insecure_cross_domain_policy_access, insecure_cross_domain_policy_headers, interesting_responses, localstart_asp, origin_spoof_access_restriction_bypass, webdav, xst

 [~] ===========================

 [+] 11 issues were detected.

 [+] [1] Unencrypted password form (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     1840199571
 [~] Severity:   Medium
 [~] Description: 
 [~] 
The HTTP protocol by itself is clear text, meaning that any data that is
transmitted via HTTP can be captured and the contents viewed.

To keep data private, and prevent it from being intercepted, HTTP is often
tunnelled through either Secure Sockets Layer (SSL), or Transport Layer Security
(TLS).
When either of these encryption standards are used it is referred to as HTTPS.

Cyber-criminals will often attempt to compromise credentials passed from the
client to the server using HTTP.
This can be conducted via various different Man-in-The-Middle (MiTM) attacks or
through network packet captures.

Arachni discovered that the affected page contains a `password` input, however,
the value of the field is not sent to the server utilising HTTPS. Therefore it
is possible that any submitted credential may become compromised.

 [~] Tags: unencrypted, password, form

 [~] CWE: http://cwe.mitre.org/data/definitions/319.html
 [~] References:
 [~]   OWASP Top 10 2010 - http://www.owasp.org/index.php/Top_10_2010-A9-Insufficient_Transport_Layer_Protection

 [~] URL:        http://sohomuse.com/login
 [~] Element:    form
 [~] All inputs: username, password
 [~] Method:     POST
 [~] Input name: password

 [~] Seed:      nil
 [~] Injected:  ""

 [~] Referring page: http://sohomuse.com/

 [~] Affected page:  http://sohomuse.com/
 [~] HTTP request
GET / HTTP/1.1
Host: sohomuse.com
Accept-Encoding: gzip, deflate
User-Agent: Arachni/v1.4
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6



 [+] [2] Insecure 'Access-Control-Allow-Origin' header (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     2309346668
 [~] Severity:   Low
 [~] Description: 
 [~] 
_Cross Origin Resource Sharing (CORS)_ is an HTML5 technology which gives modern
web browsers the ability to bypass restrictions implemented by the _Same Origin Policy_.
The _Same Origin Policy_ requires that both the JavaScript and the page are loaded
from the same domain in order to allow JavaScript to interact with the page. This
in turn prevents malicious JavaScript being executed when loaded from external domains.

The CORS policy allows the application to specify exceptions to the protections
implemented by the browser, and allows the developer to whitelist domains for
which external JavaScript is permitted to execute and interact with the page.

A weak CORS policy is one which whitelists all domains using a wildcard (`*`),
which will allow any externally loaded JavaScript resource to interact with the
affected page. This can severely increase the risk of attacks such as Cross Site Scripting etc.

Arachni detected that the CORS policy being set by the server was weak, and used
a wildcard value. This is evident by the `Access-Control-Allow-Origin` header being set to `*`.

 [~] Tags: 
 [~] References:
 [~]   OWASP - https://www.owasp.org/index.php/CORS_OriginHeaderScrutiny
 [~]   Mozilla Developer Network - https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS

 [~] URL:        http://sohomuse.com/
 [~] Element:    server

 [~] Proof:     "Access-Control-Allow-Origin: *\r"

 [~] Referring page: http://sohomuse.com/

 [~] Affected page:  http://sohomuse.com/
 [~] HTTP request
GET / HTTP/1.1
Host: sohomuse.com
Accept-Encoding: gzip, deflate
User-Agent: Arachni/v1.4
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6



 [+] [3] Missing 'X-Frame-Options' header (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     3671464547
 [~] Severity:   Low
 [~] Description: 
 [~] 
Clickjacking (User Interface redress attack, UI redress attack, UI redressing)
is a malicious technique of tricking a Web user into clicking on something different
from what the user perceives they are clicking on, thus potentially revealing
confidential information or taking control of their computer while clicking on
seemingly innocuous web pages.

The server didn't return an `X-Frame-Options` header which means that this website
could be at risk of a clickjacking attack.

The `X-Frame-Options` HTTP response header can be used to indicate whether or not
a browser should be allowed to render a page inside a frame or iframe. Sites can
use this to avoid clickjacking attacks, by ensuring that their content is not
embedded into other sites.

 [~] Tags: 

 [~] CWE: http://cwe.mitre.org/data/definitions/693.html
 [~] References:
 [~]   MDN - https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options
 [~]   RFC - http://tools.ietf.org/html/rfc7034
 [~]   OWASP - https://www.owasp.org/index.php/Clickjacking

 [~] URL:        http://sohomuse.com/
 [~] Element:    server

 [~] Proof:     "HTTP/1.1 200 OK"

 [~] Referring page: http://sohomuse.com/

 [~] Affected page:  http://sohomuse.com/
 [~] HTTP request
GET / HTTP/1.1
Host: sohomuse.com
Accept-Encoding: gzip, deflate
User-Agent: Arachni/v1.4
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6



 [+] [4] Interesting response (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     527344398
 [~] Severity:   Informational
 [~] Description: 
 [~] 
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.

 [~] Tags: interesting, response, server
 [~] References:
 [~]   w3.org - http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

 [~] URL:        http://sohomuse.com/config.php
 [~] Element:    server

 [~] Proof:     "HTTP/1.1 302 Moved Temporarily"

 [~] Referring page: http://sohomuse.com/

 [~] Affected page:  http://sohomuse.com/config.php
 [~] HTTP request
GET /config.php HTTP/1.1
Host: sohomuse.com
Accept-Encoding: gzip, deflate
User-Agent: Arachni/v1.4
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
Cookie: connect.sid=s%3AGDaM0Ukp2XPOSOeuDMF_mUVN.qddMzU9XaV%2FnczSzE3N9CXX0Up782XjKxAJ%2F0A6im2c



 [+] [5] Interesting response (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     1339217123
 [~] Severity:   Informational
 [~] Description: 
 [~] 
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.

 [~] Tags: interesting, response, server
 [~] References:
 [~]   w3.org - http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

 [~] URL:        http://sohomuse.com/
 [~] Element:    server

 [~] Proof:     "HTTP/1.1 405 Not Allowed"

 [~] Referring page: http://sohomuse.com/

 [~] Affected page:  http://sohomuse.com/
 [~] HTTP request
TRACE / HTTP/1.1
Host: sohomuse.com
Accept-Encoding: gzip, deflate
User-Agent: Arachni/v1.4
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
Cookie: connect.sid=s%3AGDaM0Ukp2XPOSOeuDMF_mUVN.qddMzU9XaV%2FnczSzE3N9CXX0Up782XjKxAJ%2F0A6im2c



 [+] [6] WebDAV (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     1301326943
 [~] Severity:   Informational
 [~] Description: 
 [~] 
Web Distributed Authoring and Versioning (WebDAV) is a facility that enables
basic file management (reading and writing) to a web server. It essentially allows
the webserver to be mounted by the client as a traditional file system allowing
users a very simplistic means to access it as they would any other medium or
network share.

If discovered, attackers will attempt to harvest information from the WebDAV
enabled directories, or even upload malicious files that could then be used to
compromise the server.

Arachni discovered that the affected page allows WebDAV access. This was discovered
as the server allowed several specific methods that are specific to WebDAV (`PROPFIND`,
`PROPPATCH`, etc.), however, further testing should be conducted on the WebDAV
component specifically as Arachni does support this feature.

 [~] Tags: webdav, options, methods, server
 [~] References:
 [~]   WebDAV.org - http://www.webdav.org/specs/rfc4918.html
 [~]   Wikipedia - http://en.wikipedia.org/wiki/WebDAV

 [~] URL:        http://sohomuse.com/
 [~] Element:    server

 [~] Proof:     "GET,POST,PUT,HEAD,DELETE,TRACE,COPY,LOCK,MKCOL,MOVE,PROPFIND,PROPPATCH,UNLOCK,REPORT,MKACTIVITY,CHECKOUT,MERGE,M-SEARCH,NOTIFY,SUBSCRIBE,UNSUBSCRIBE,PATCH"

 [~] Referring page: http://sohomuse.com/

 [~] Affected page:  http://sohomuse.com/
 [~] HTTP request
OPTIONS / HTTP/1.1
Host: sohomuse.com
Accept-Encoding: gzip, deflate
User-Agent: Arachni/v1.4
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
Cookie: connect.sid=s%3AGDaM0Ukp2XPOSOeuDMF_mUVN.qddMzU9XaV%2FnczSzE3N9CXX0Up782XjKxAJ%2F0A6im2c



 [+] [7] Interesting response (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     2656501835
 [~] Severity:   Informational
 [~] Description: 
 [~] 
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.

 [~] Tags: interesting, response, server
 [~] References:
 [~]   w3.org - http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

 [~] URL:        http://sohomuse.com/login
 [~] Element:    server

 [~] Proof:     "HTTP/1.1 500 Internal Server Error"

 [~] Referring page: http://sohomuse.com/

 [~] Affected page:  http://sohomuse.com/login
 [~] HTTP request
POST /login HTTP/1.1
Host: sohomuse.com
Accept-Encoding: gzip, deflate
User-Agent: Arachni/v1.4
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
Cookie: connect.sid=s%3AGDaM0Ukp2XPOSOeuDMF_mUVN.qddMzU9XaV%2FnczSzE3N9CXX0Up782XjKxAJ%2F0A6im2c
Content-Length: 64
Content-Type: application/x-www-form-urlencoded

username=php%3A%2F%2Finput%00.&password=5543%21%25arachni_secret

 [+] [8] Interesting response (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     2648508649
 [~] Severity:   Informational
 [~] Description: 
 [~] 
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.

 [~] Tags: interesting, response, server
 [~] References:
 [~]   w3.org - http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

 [~] URL:        http://sohomuse.com/recover-username
 [~] Element:    server

 [~] Proof:     "HTTP/1.1 500 Internal Server Error"

 [~] Referring page: http://sohomuse.com/

 [~] Affected page:  http://sohomuse.com/recover-username
 [~] HTTP request
POST /recover-username HTTP/1.1
Host: sohomuse.com
Accept-Encoding: gzip, deflate
User-Agent: Arachni/v1.4
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
Cookie: connect.sid=s%3AGDaM0Ukp2XPOSOeuDMF_mUVN.qddMzU9XaV%2FnczSzE3N9CXX0Up782XjKxAJ%2F0A6im2c
Content-Length: 81
Content-Type: application/x-www-form-urlencoded

email=arachni%40email.gr%23%5E%28%24%21%40%24%29%28%28%29%29%29%2A%2A%2A%2A%2A%2A

 [+] [9] Interesting response (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     2485418883
 [~] Severity:   Informational
 [~] Description: 
 [~] 
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.

 [~] Tags: interesting, response, server
 [~] References:
 [~]   w3.org - http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

 [~] URL:        http://sohomuse.com/recover
 [~] Element:    server

 [~] Proof:     "HTTP/1.1 302 Moved Temporarily"

 [~] Referring page: http://sohomuse.com/

 [~] Affected page:  http://sohomuse.com/recover
 [~] HTTP request
POST /recover HTTP/1.1
Host: sohomuse.com
Accept-Encoding: gzip, deflate
User-Agent: Arachni/v1.4
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
Cookie: connect.sid=s%3AGDaM0Ukp2XPOSOeuDMF_mUVN.qddMzU9XaV%2FnczSzE3N9CXX0Up782XjKxAJ%2F0A6im2c
Content-Length: 98
Content-Type: application/x-www-form-urlencoded

email=arachni%40email.grhTtP%3A%2F%2Ftests.arachni-scanner.com%2Frfi.md5.txt&username=arachni_name

 [+] [10] E-mail address disclosure (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     1243232385
 [~] Severity:   Informational
 [~] Description: 
 [~] 
Email addresses are typically found on "Contact us" pages, however, they can also
be found within scripts or code comments of the application. They are used to
provide a legitimate means of contacting an organisation.

As one of the initial steps in information gathering, cyber-criminals will spider
a website and using automated methods collect as many email addresses as possible,
that they may then use in a social engineering attack.

Using the same automated methods, Arachni was able to detect one or more email
addresses that were stored within the affected page.

 [~] Tags: 

 [~] CWE: http://cwe.mitre.org/data/definitions/200.html
 [~] References:

 [~] URL:        http://sohomuse.com/
 [~] Element:    body

 [~] Signature: [A-Z0-9._%+-]+(?:@|\s*\[at\]\s*)[A-Z0-9.-]+(?:\.|\s*\[dot\]\s*)[A-Z]{2,4}
 [~] Proof:     "info@sohomuse.com"

 [~] Referring page: http://sohomuse.com/

 [~] Affected page:  http://sohomuse.com/
 [~] HTTP request
GET / HTTP/1.1
Host: sohomuse.com
Accept-Encoding: gzip, deflate
User-Agent: Arachni/v1.4
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6



 [+] [11] Allowed HTTP methods (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     1314029011
 [~] Severity:   Informational
 [~] Description: 
 [~] 
There are a number of HTTP methods that can be used on a webserver (`OPTIONS`,
`HEAD`, `GET`, `POST`, `PUT`, `DELETE` etc.).  Each of these methods perform a
different function and each have an associated level of risk when their use is
permitted on the webserver.

A client can use the `OPTIONS` method within a request to query a server to
determine which methods are allowed.

Cyber-criminals will almost always perform this simple test as it will give a
very quick indication of any high-risk methods being permitted by the server.

Arachni discovered that several methods are supported by the server.

 [~] Tags: http, methods, options
 [~] References:
 [~]   Apache.org - http://httpd.apache.org/docs/2.2/mod/core.html#limitexcept

 [~] URL:        http://sohomuse.com/
 [~] Element:    server

 [~] Proof:     "GET,POST,PUT,HEAD,DELETE,TRACE,COPY,LOCK,MKCOL,MOVE,PROPFIND,PROPPATCH,UNLOCK,REPORT,MKACTIVITY,CHECKOUT,MERGE,M-SEARCH,NOTIFY,SUBSCRIBE,UNSUBSCRIBE,PATCH"

 [~] Referring page: http://sohomuse.com/

 [~] Affected page:  http://sohomuse.com/
 [~] HTTP request
OPTIONS / HTTP/1.1
Host: sohomuse.com
Accept-Encoding: gzip, deflate
User-Agent: Arachni/v1.4
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
Cookie: connect.sid=s%3AGDaM0Ukp2XPOSOeuDMF_mUVN.qddMzU9XaV%2FnczSzE3N9CXX0Up782XjKxAJ%2F0A6im2c




 [+] Plugin data:
 [~] ---------------


 [*] Health map
 [~] ~~~~~~~~~~~~~~
 [~] Description: Generates a simple list of safe/unsafe URLs.

 [~] Legend:
 [+] No issues
 [-] Has issues

 [-] http://sohomuse.com/
 [-] http://sohomuse.com/config.php
 [+] http://sohomuse.com/img/favicon/apple-touch-icon-114x114.png
 [+] http://sohomuse.com/img/favicon/apple-touch-icon-120x120.png
 [+] http://sohomuse.com/img/favicon/apple-touch-icon-144x144.png
 [+] http://sohomuse.com/img/favicon/apple-touch-icon-152x152.png
 [+] http://sohomuse.com/img/favicon/apple-touch-icon-180x180.png
 [+] http://sohomuse.com/img/favicon/apple-touch-icon-57x57.png
 [+] http://sohomuse.com/img/favicon/apple-touch-icon-60x60.png
 [+] http://sohomuse.com/img/favicon/apple-touch-icon-72x72.png
 [+] http://sohomuse.com/img/favicon/apple-touch-icon-76x76.png
 [+] http://sohomuse.com/img/favicon/favicon-160x160.png
 [+] http://sohomuse.com/img/favicon/favicon-16x16.png
 [+] http://sohomuse.com/img/favicon/favicon-192x192.png
 [+] http://sohomuse.com/img/favicon/favicon-32x32.png
 [+] http://sohomuse.com/img/favicon/favicon-96x96.png
 [+] http://sohomuse.com/img/favicon/favicon.ico
 [-] http://sohomuse.com/login
 [+] http://sohomuse.com/login.css
 [+] http://sohomuse.com/login.js
 [+] http://sohomuse.com/mailto:info@sohomuse.com
 [-] http://sohomuse.com/recover
 [-] http://sohomuse.com/recover-username

 [~] Total: 23
 [+] Without issues: 18
 [-] With issues: 5 ( 22% )
